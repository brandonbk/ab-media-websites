import { URLSearchParams } from "url";
import { cleanPath } from "@parameter1/base-cms-utils";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

$ const {
  totalCount,
  hasNextPage,
  hasPreviousPage,
  endCursor,
  startCursor,

  path,
} = input;

$ const asRels = defaultValue(input.asRels, false);

$ const nextQuery = new URLSearchParams({ cursor: endCursor, direction: 'AFTER' });
$ const lastQuery = new URLSearchParams({ direction: 'BEFORE' });
$ const prevQuery = new URLSearchParams({ cursor: startCursor, direction: 'BEFORE' });

$ const nextHref = `/${cleanPath(path)}?${nextQuery}`;
$ const lastHref = `/${cleanPath(path)}?${lastQuery}`;
$ const prevHref = `/${cleanPath(path)}?${prevQuery}`;
$ const firstHref = `/${cleanPath(path)}`;

$ const blockName = "pagination-controls";

<if(totalCount)>
  <if(asRels)>
    <if(hasPreviousPage)>
      <link rel="prev" href=prevHref />
    </if>
    <if(hasNextPage)>
      <link rel="next" href=nextHref />
    </if>
  </if>
  <else>
    <marko-web-block name=blockName class=input.class>
      <if(hasPreviousPage)>
        <div class=`${blockName}__before`>
          <marko-web-link
            class="btn btn-primary"
            href=firstHref
          >
            First Page
          </marko-web-link>
          <marko-web-link
            class="btn btn-primary"
            href=prevHref
          >
            Previous Page
          </marko-web-link>
        </div>
      </if>
      <if(hasNextPage)>
        <div class=`${blockName}__after`>
          <marko-web-link
            class="btn btn-primary"
            href=nextHref
          >
            Next Page
          </marko-web-link>
          <marko-web-link
            class="btn btn-primary"
            href=lastHref
          >
            Last Page
          </marko-web-link>
        </div>
      </if>
    </marko-web-block>
  </else>
</if>
