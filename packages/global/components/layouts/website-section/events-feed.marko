import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import { getAsArray } from "@parameter1/base-cms-object-path";
import queryFragment from "@ab-media/package-global/graphql/fragments/specialized-events";

$ const { id, alias, name, pageNode } = input;
$ const sections = getAsArray(input, "sections");

$ const {
  site,
  pagination: p,
  i18n,
  config,
} = out.global;

$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const buttonLabels = { continue: continueLabel };
$ const perPage = 12;
$ const now = Date.now();

$ const queryParams = {
  requiresImage: false,
  sectionBubbling: false,
  includeContentTypes: ["Event"],
  endingAfter: now,
  sort: {
    field: "startDate",
    order: "asc",
  },
};

$ const specializedQueryParams = {
  ...queryParams,
  requiresImage: true,
  includeLabels: ["Specialized Events"],
  limit: 25,
  queryFragment,
};
$ const standardQueryParams = {
  ...queryParams,
  limit: perPage,
  skip: p.skip({ perPage })
};

<!-- Correct queryParams format to send to pagination controls -->
$ const countQueryParams = {
  ...queryParams,
  beginning: {
    before: now,
  },
};

<global-website-section-default-layout
  id=id
  alias=alias
  name=name
  page-node=pageNode
>
  <@head>
    <theme-section-feed-block|{ totalCount }| alias=alias count-only=true>
      <@query-params ...countQueryParams />
      <theme-pagination-controls
        per-page=perPage
        total-count=totalCount
        path=alias
        as-rels=true
      />
    </theme-section-feed-block>
  </@head>

  <@section|{ aliases }| modifiers=["break-container", "first"]>
    <global-leaderboard-ad-block
      position="section_page"
      aliases=aliases
      modifiers=["inter-block", "combined-leaderboard"]
    />
  </@section>

  <if(input.beforeName)>
    <@section|{ blockName, section, aliases }|>
      <${input.beforeName}
        aliases=aliases
        block-name=blockName
        section=section
      />
    </@section>
  </if>

  <@section|{ blockName, section, aliases }| modifiers=["events"]>
    <if(p.page === 1)>
      <marko-web-element block-name="specialized-events" name="wrapper">
        <theme-section-feed-block alias=alias lazyload=false>
          <@before>
            <marko-web-element class="page-wrapper__website-section-name" block-name="specialized-events" name="header">
              ${config.siteName()} ${i18n("Events")}
            </marko-web-element>
          </@before>
          <@query-params ...specializedQueryParams />
        </theme-section-feed-block>
      </marko-web-element>
    </if>

    <marko-web-website-section-name|{ value }| tag="h1" block-name=blockName obj=section>
      <if(p.page > 1)>${value}: Page ${p.page}</if>
      <else>${value}</else>
    </marko-web-website-section-name>
    <marko-web-website-section-description obj=section />

    <if(input.afterName)>
      <${input.afterName}
        aliases=aliases
        block-name=blockName
        section=section
      />
    </if>

    <theme-section-feed-block alias=alias lazyload=false modifiers=["archives"]>
      <@query-params ...standardQueryParams />
    </theme-section-feed-block>
    <theme-section-feed-block|{ totalCount }| alias=alias count-only=true>
      <@query-params ...countQueryParams />
      <theme-pagination-controls
        per-page=perPage
        total-count=totalCount
        path=alias
      />
    </theme-section-feed-block>
  </@section>

  <@section>
    <theme-top-stories-block query-params={ optionName: "Pinned" } />
  </@section>

  <for|s| of=sections>
    <@section|{ blockName, section, aliases }| modifiers=s.modifiers>
      <${s.renderBody}
        block-name=blockName
        section=section
        aliases=aliases
      />
    </@section>
  </for>
</global-website-section-default-layout>
