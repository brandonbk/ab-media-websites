import { get, getAsArray } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import getContentPreview from "@parameter1/base-cms-marko-web-theme-monorail/utils/get-content-preview";

$ const { site, pagination: p, BAM } = out.global;
$ const { id, type, pageNode, ...rest } = input;
$ const sections = getAsArray(input, "sections");

$ const showReadNextBlock = defaultValue(input.showReadNextBlock, true);
$ const showBottomAdBlock = defaultValue(input.showBottomAdBlock, true);
$ const showTopStoryBlock = defaultValue(input.showTopStoryBlock, false);
$ const showMoreSection = defaultValue(input.showMoreSection, true);
$ const displayPrimaryImage = ["media-gallery"].includes(type) ? false : true;
$ const displayPublishedDate = ["company", "contact", "whitepaper"].includes(type) ? false : true;
$ const displayReadNext = showReadNextBlock && ["article"].includes(type);
$ const displaySocialShare = ["contact"].includes(type) ? false : true;
$ const displayComments = ["contact"].includes(type) ? false : true;
$ const newsletterConfig = site.getAsObject('newsletter.signupBannerLarge');
$ const shouldInjectAds = ["article", "video", "news", "podcast"].includes(type);

<global-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  ...rest
>
  <@section|{ aliases }| modifiers=["break-container", "first-sm"]>
    <global-leaderboard-ad-block
      position="content_page"
      aliases=aliases
      modifiers=["inter-block", "combined-leaderboard", "content-leaderboard"]
    />
  </@section>

  <@section|{ blockName, content, aliases, authors }| modifiers=["content-header"]>
    $ const { primarySection } = content;
    <div class="content-page-header" role="region" aria-label="Content Information">
      <theme-content-page-breadcrumbs section=primarySection />
      <marko-web-content-name tag="h1" block-name=blockName obj=content />
      <if(type !== "contact")>
        <if(authors.length === 1)>
          <theme-author-published-node author=authors[0] content=content />
        </if>
        <else-if(authors.length > 1)>
          <default-theme-content-attribution obj=content elements=["authors"] />
        </else-if>
      </if>
      <if(displayPublishedDate && authors.length !== 1)>
        <default-theme-page-dates|{ blockName }|>
          <theme-content-published-node block-name=blockName obj=content />
        </default-theme-page-dates>
      </if>
      <global-sponsored-section-logo alias=primarySection.alias modifiers=["content-page"] class="mt-3" />
    </div>
  </@section>

  <@section|{ aliases, content, authors }|>
    $ const { primarySection } = content;
    $ const inCarouselImages = getAsArray(content, "images.edges").map(edge => edge.node).filter(node => node.inCarousel);
    <div class="content-page-body" role="region" aria-label="Content Body">
      <default-theme-page-contents|{ blockName }| attrs={ "data-gallery-id": id }>
        <if(content.embedCode)>
          <marko-web-content-embed-code block-name=blockName obj=content />
        </if>
        <else-if(inCarouselImages.length)>
          <global-image-slider
            modifiers=["project-gallery"]
            images=inCarouselImages
            image-options={ fit: "crop", w: 879, h: 586, auto: "format,compress" }
          />
        </else-if>
        <else-if(displayPrimaryImage)>
          $ let forceDisplay;
          $ const modifiers = [];
          $ if (["contact", "whitepaper", "document"].includes(type)) {
            forceDisplay = "left";
            modifiers.push('forced-left');
          }
          $ if (type === "video") forceDisplay = "none";
          <theme-primary-image-block
            obj=content.primaryImage
            force-display=forceDisplay
            modifiers=modifiers
          />
        </else-if>

        $ const requiresRegistration = get(content, "userRegistration.isCurrentlyRequired");
        $ const accessLevels = getAsArray(content, "userRegistration.accessLevels");
        <marko-web-identity-x-access|context|
          enabled=requiresRegistration
          required-access-level-ids=accessLevels
        >
          <if(!context.canAccess || context.requiresUserInput)>
            $ const body = getContentPreview({ body: content.body, selector: "p:nth-of-type(1)" });
            <marko-web-content-body block-name=blockName obj={ body } />

            <div class="content-page-preview-overlay" />
            <theme-content-page-gate
              can-access=context.canAccess
              is-logged-in=context.isLoggedIn
              has-required-access-level=context.hasRequiredAccessLevel
              requires-access-level=context.requiresAccessLevel
              requires-user-input=context.requiresUserInput
              messages=context.messages
            />
          </if>
          <else>
            <content-body-with-injection content=content aliases=aliases block-name=blockName />
            <global-leaders-contextual content-id=id skip-when-exists=true />

            <!-- needs input -->
            <if(input.afterBody)>
              <${input.afterBody}
                aliases=aliases
                block-name=blockName
                content=content
              />
            </if>

            $ const sidebars = getAsArray(content, "sidebars").map((sidebar) => sidebar.body);
            <marko-web-content-sidebars block-name=blockName obj={ sidebars } />
          </else>
        </marko-web-identity-x-access>

        <if(type === "document" || type === "whitepaper")>
          <default-theme-content-download obj=content>
            <@wufoo user-name=site.get("wufoo.userName") />
            <@link class="btn btn-primary" />
          </default-theme-content-download>
        </if>
        <if(type !== "contact")>
          <for|author| of=authors>
            <if(getAsArray(author, "labels").includes("Contributor"))>
              <marko-web-content-body obj=author block-name="inline-author-bio" />
            </if>
          </for>
        </if>
        <if(!newsletterConfig.disabled)>
          <identity-x-newsletter-form-inline type="inlineContent" />
        </if>
        <else>
          <theme-newsletter-signup-banner-external-block config-name="signupBannerStatic" />
        </else>

        <if(displaySocialShare)>
          <marko-web-social-sharing
            path=content.siteContext.path
            providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
            print-path=`/print/content/${content.id}`
          />
        </if>

        <if(displayComments)>
          <theme-identity-x-comment-stream content=content />
        </if>

        <if(displayReadNext)>
          <theme-read-next-block
            content-id=id
            section-id=primarySection.id
            published=content.published
          />
        </if>
      </default-theme-page-contents>
    </div>
  </@section>

  <if(showBottomAdBlock)>
    <@section|{ aliases }|>
      <if(BAM && BAM.enable)>
        <marko-web-broadstreet-zone zone-id=BAM.zones.rotation modifiers=["roataion", "inter-block", "content_page"] />
      </if>
      <else>
        <theme-gam-define-display-ad
          name="rotation"
          position="content_page"
          aliases=aliases
          modifiers=["inter-block"]
        />
      </else>
    </@section>
  </if>

  <@section|{ content }|>
    <theme-related-stories-block
      content-id=content.id
      section-id=content.primarySection.id
      with-native-x=true
    />
  </@section>

  <if(showMoreSection)>
    $ const perPage = 12;
    $ const moreSectionLimit = 3;
    $ const moreSectionCount = perPage / moreSectionLimit;
    <for|i| from=1 to=moreSectionCount>

      <@section|{ content, aliases, blockName }|>
        <aside aria-label=`More In ${get(content, 'primarySection.name')} List ${i}`>
        <if(i === 1)>
          <marko-web-website-section-name|{ value }| tag="h2" block-name=blockName obj=content.primarySection>
            More in ${value}
          </marko-web-website-section-name>
        </if>

        $ let skip = (i * moreSectionLimit) - moreSectionLimit;
        <theme-section-feed-block alias=content.primarySection.alias>
          <@query-params limit=moreSectionLimit skip=p.skip({ perPage, skip }) />
        </theme-section-feed-block>

        <if(i === moreSectionCount)>
          <theme-section-feed-block|{ totalCount }| alias=content.primarySection.alias count-only=true>
            <theme-pagination-controls
              per-page=perPage
              total-count=totalCount
              path=content.primarySection.alias
            />
          </theme-section-feed-block>
        </if>
        </aside>
      </@section>

      <@section|{ content, aliases, blockName }|>
        <if(BAM && BAM.enable)>
          <marko-web-broadstreet-zone zone-id=BAM.zones.rotation />
        </if>
        <else>
          <theme-gam-define-display-ad
            name="rotation"
            position="content_page"
            aliases=aliases
            modifiers=["inter-block"]
          />
        </else>
      </@section>
    </for>
  </if>

  <for|s| of=sections>
    <@section|{ blockName, content, aliases }| modifiers=s.modifiers>
      <${s.renderBody}
        block-name=blockName
        content=content
        aliases=aliases
      />
    </@section>
  </for>
</global-content-wrapper-layout>
