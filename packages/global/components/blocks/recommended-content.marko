import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import queryFragment from "@parameter1/base-cms-marko-web-theme-monorail/graphql/fragments/content-list";
$ const { personasHandler } = out.global;

$ const title = defaultValue(input.title, "Recommended");

<marko-web-identity-x-context|{ user, hasUser }|>
  $ const customTitle = (hasUser) ? `${title} for ${user.givenName}` : title;
  <if(hasUser && process.env.ENABLE_PERSONAS_RECOMMENDATIONS === "true")>
    $ const answeredQuestions = user.customSelectFieldAnswers.filter((answers) => answers.hasAnswered);
    $ const { assignedRecommendContentSections } = personasHandler({ answeredQuestions });
    $ const sectionIdForRecommendedContent = assignedRecommendContentSections[Math.floor(Math.random() * assignedRecommendContentSections.length)];
    <if(sectionIdForRecommendedContent)>
      $ const queryParams = {
        sectionId: sectionIdForRecommendedContent,
        limit: 4,
        queryFragment,
      }
      <marko-web-query|{ nodes }|
        name="website-scheduled-content"
        params=queryParams
      >
        <theme-latest-content-list-block nodes=nodes title=customTitle class="recommended-content">
          <@native-x indexes=[0] name="default" aliases=input.aliases ...input.nativeX />
          <@node with-section=true with-dates=false ...input.node />
        </theme-latest-content-list-block>
      </marko-web-query>
    </if>
    <else>
      <theme-latest-content-list-block title=customTitle query-params=input.queryParams class="recommended-content">
        <@native-x indexes=[0] name="default" aliases=input.aliases ...input.nativeX />
        <@node with-section=true with-dates=false ...input.node />
      </theme-latest-content-list-block>
    </else>
  </if>
  <else>
    <theme-latest-content-list-block title=customTitle query-params=input.queryParams class="recommended-content">
      <@native-x indexes=[0] name="default" aliases=input.aliases ...input.nativeX />
      <@node with-section=true with-dates=false ...input.node />
    </theme-latest-content-list-block>
  </else>
</marko-web-identity-x-context>
