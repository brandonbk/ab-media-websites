import gql from "graphql-tag";
import { getAsArray, get } from "@parameter1/base-cms-object-path";

$ const { graphqlClient } = input;
$ const shortIds = (input.shortIds || "").split(",").map(v => v.trim()).filter(v => v);

$ const blockName = "read-next";
$ const convertEntry = (entry) => {
  const primaryImage = get(entry, "primaryImageEdge.node");
  return {
    type: "project-gallery",
    shortName: entry.title,
    published: new Date(entry.publishedAt),
    siteContext: { path: `/project-galleries/${entry.type.slug}/${entry.shortId}/${entry.slug}` },
    primarySection: { name: `${entry.city}, ${entry.region}` },
    primaryImage,
  };
};

<if(shortIds.length)>
  $ const query = gql`
    query DirectoryFeaturedProjectsBlock($shortIds: [String!]!) {
      entries(input: {
        includeIdentifiers: { shortIds: $shortIds }
        pagination: { limit: 50 }
        sort: { field: TITLE, order: ASC }
      }) {
        edges {
          node {
            id
            shortId
            type {
              id
              slug
            }
            slug
            title
            city
            region
            publishedAt
            primaryImageEdge {
              node {
                id
                src
                alt
              }
            }
          }
        }
      }
    }
  `;
  $ const variables = { shortIds };

  <marko-web-resolve|{ resolved }| promise=graphqlClient.query({ query, variables })>
    $ const nodes = getAsArray(resolved, "data.entries.edges").map(edge => edge.node);
    <if(nodes.length)>
      <marko-web-block name=blockName>
        <marko-web-element block-name=blockName name="header">
          Projects Featured in the Architectural Showcase
        </marko-web-element>
        <marko-web-node-list
          inner-justified=false
          flush-x=true
          flush-y=true
          modifiers=[blockName]
        >
          <@nodes nodes=nodes>
            <@slot|{ node }|>
              <global-content-node
                image-position="left"
                flush=true
                node=convertEntry(node)
                modifiers=[blockName]
              >
                <@image width=160 ar="3:2" />
              </global-content-node>
            </@slot>
          </@nodes>
        </marko-web-node-list>
      </marko-web-block>
    </if>
  </marko-web-resolve>
</if>
